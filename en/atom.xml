<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[FrontCore.org]]></title>
  <link href="http://front-core.org/atom.xml" rel="self"/>
  <link href="http://front-core.org/"/>
  <updated>2015-01-05T21:12:32+09:00</updated>
  <id>http://front-core.org/</id>
  <author>
    <name><![CDATA[FrontCore]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[爆速の HTML5 クロス・プラットフォーム CocoonJS]]></title>
    <link href="http://front-core.org/en/blog/2014/12/16/about-cocoonjs/"/>
    <updated>2014-12-16T00:00:00+09:00</updated>
    <id>http://front-core.org/en/blog/2014/12/16/about-cocoonjs</id>
    <content type="html"><![CDATA[<p>CocoonJS は <a href="https://www.ludei.com/">Ludei</a> 社が提供する爆速の「HTML5 クロス・プラットフォーム」です。</p>

<p>HTML5 クロス・プラットフォームは他にも色々ありますが、CocoonJS は PhoneGap に似ています。
HTML / CSS / JS をネイティブコードに変換するのでは無く、そのまま実行環境で動かす仕組みです。</p>

<!-- more -->


<h1>CocoonJS vs PhoneGap</h1>

<p>HTML / CSS / JS をそのまま使える点では同じですが、
PhoneGap がシステムの WebView を使うのに対し、CocoonJS は独自の実行環境を持っています。</p>

<p>システム WebView はとにかくパフォーマンスが悪く、OS や機種依存により挙動が違うなどの問題がありますが、
CocoonJS は独自の実行環境で動作するため OS や機種依存の問題を解消し、
システム WebView に比べて圧倒的に早いです。</p>

<p><span class="block-center">
<a href="https://www.ludei.com/landing/cocoonjs-phonegap/"><img src="http://front-core.org/images/post/about-cocoonjs/cocoonjs-vs-phonegap.png" alt="CocoonJS vs PhoneGap" /></a>
<span style="float:right">（Comparing CocoonJS and PhoneGap  - <a href="https://www.ludei.com/">Ludei</a> サイトより）</span>
</span></p>

<h1>CocoonJS が素敵な理由</h1>

<p>CocoonJS が素敵な理由をいくつか挙げてみます。</p>

<!--（参照：[About CocoonJS](https://www.ludei.com/cocoonjs/)）-->


<ul>
<li>爆速の HTML5 実行環境</li>
<li>今までの WEB 開発フレームワークやライブラリーをそのまま使える</li>
<li>簡単に実機でテストやデバッグができる</li>
<li>様々のプラットフォームに簡単に配布できる</li>
<li>アプリ運用に関わる便利なツールや拡張機能が備わっている</li>
</ul>


<h2>爆速の HTML5 実行環境</h2>

<p>CocoonJS では現在異なる３つの実行環境を提供しており、用途に合わせて最適な実行環境を選ぶ事ができます。</p>

<ul>
<li><a href="http://support.ludei.com/hc/en-us/articles/202321098">Canvas+</a></li>
<li><a href="http://support.ludei.com/hc/en-us/articles/201952993">WebView+</a></li>
<li><a href="http://support.ludei.com/hc/en-us/articles/202321108-Apache-Cordova-Promo">Apache Cordova</a></li>
</ul>


<h3>Canvas+</h3>

<p><span class="block-center">
<a href="http://support.ludei.com/hc/en-us/articles/202321098"><img src="http://front-core.org/images/post/about-cocoonjs/canvas-plus-promo.png" alt="Canvas+" /></a>
</span></p>

<p>HTML5 Canvas アプリやゲームに最適な実行環境です。
Canvas 描画に特化された Canvas+ の JavaScript 実行速度は、他のブラウザーやシステム WebView に比べて 10倍は早いと言われています。</p>

<p>iOS 5, Android 2.3 以上であれば WebGL もサポートされるので更に爆速です！</p>

<h3>WebView+</h3>

<p><span class="block-center">
<a href="http://support.ludei.com/hc/en-us/articles/201952993"><img src="http://front-core.org/images/post/about-cocoonjs/webview-plus-promo.png" alt="WebView+" /></a>
</span></p>

<p>Chromium で作られた独自の WebView として、主に Android 向けに開発された実行環境です。
Chromium を元にしているのでシステム WebView より端然早く、機種や OS バージョン毎の差異を気にしなくて済みます。
(Android 4 以上)</p>

<p>iOS 8 以前の iOS では WebView+ はサポートされてませんでしたが、
iOS 8 からは WKWebView を基盤にした WebView+ がサポートされる様になりました。</p>

<h3>Apache Cordova</h3>

<p><span class="block-center">
<a href="http://support.ludei.com/hc/en-us/articles/202321108-Apache-Cordova-Promo"><img src="http://front-core.org/images/post/about-cocoonjs/apache-cordova-promo.png" alt="Apache Cordova" /></a>
</span></p>

<p>上記の「CocoonJS vs PhoneGap」比較テーブルの一番下に「Cordova extensions」と書いている様に、
CocoonJS は Apache Cordova を正式にサポートしていて、Cordova の無数のプラグインと CocoonJS を組み合わせる事が可能です。</p>

<p>現在 Cordova に対応した CocoonJS 実行環境は WebView+ のみで、Canvas+ は対応予定になっています。</p>

<!--
最近のアナウンスで CocoonJS でも Cordoba プラグインを使える様になっています。
最近 CocoonJS は Apache Cordova を正式にサポートする事を発表しました。
これにより Cordova の無数のプラグインと CocoonJS の WebView+ を組み合わせる事が可能です。
（参照：[Apache Cordova Promo](http://support.ludei.com/hc/en-us/articles/202321108-Apache-Cordova-Promo)）
-->


<h2>今までの WEB 開発フレームワークやライブラリーをそのまま使える</h2>

<p>CocoonJS では HTML/CSS/JS がそのまま実行されるので、既存の WEB 開発フレームワークやライブラリーをそのまま使えます。</p>

<p>以下は例として一部の有名なフレームワークやライブラリーを挙げていますが、
あくまでも例なのでここに乗っていないライブラリーもほとんどそのまま使えます。（three.js など）</p>

<p><a href="https://www.ludei.com/cocoonjs/#development"><img src="http://front-core.org/images/post/about-cocoonjs/software.png" alt="使えるライブラリーの例" /></a>
<span style="float:right">（使えるライブラリーの例  - <a href="https://www.ludei.com/">Ludei</a> サイトより）</span></p>

<h2>簡単に実機でテストやデバッグができる</h2>

<p>CocoonJS 用に開発してアプリやゲームを、実際に実機でのテスト・デバッグが簡単に行える専用のアプリ「CocoonJS Launcher」が提供されています。</p>

<p><span class="block-center">
<a href="http://support.ludei.com/hc/en-us/articles/201048463-CocoonJS-launcher-user-guide"><img src="http://front-core.org/images/post/about-cocoonjs/cocoonjs-launcher.png" alt="CocoonJS Launcher" /></a>
</span></p>

<ul>
<li><a href="https://play.google.com/store/apps/details?id=com.ideateca.cocoonjslauncher&amp;hl=en">CocoonJS Launcher - Android 版</a></li>
<li><a href="https://itunes.apple.com/en/app/cocoonjs-by-ludei/id519623307?mt=8">CocoonJS Launcher - iOS 版</a></li>
</ul>


<p>CocoonJS Launcher を使えば自分が作成したコードを面倒な手順無しで簡単に実機確認ができます。</p>

<p>ソースコードをZIPファイルに圧縮して端末のファイルシステムに転送して実行、
またはローカルホストや外部サイトのURLを指定して実行する事も可能です。</p>

<!--
CocoonJS Launcher はデバッグ用のコンソール出力やプロファイリング機能も持っています。
Android の場合は Chrome DevTool(WebView+), Eclipse(Canvas+) によるリモートデバッグも可能です。
-->


<h2>様々のプラットフォームに簡単に配布できる</h2>

<p>CocoonJS Cloud と言うサービスも提供しており、
iOS, Android をはじめ様々なプラットフォーム向けに配布可能なアプリを Cloud サービスから簡単にコンパイルできます。</p>

<p><span class="block-center">
<a href="https://www.ludei.com/cocoonjs/#cross-platform"><img src="http://front-core.org/images/post/about-cocoonjs/cocoonjs-cloud.png" alt="CocoonJS Cloud" /></a>
</span></p>

<p>配布した後は分析やマネタイズに必要な各種設定をダッシュボードで管理できる便利なサービスです。</p>

<h2>アプリ運用に関わる便利なツールや拡張機能が備わっている</h2>

<h3>拡張機能</h3>

<p>CocoonJS には JavaScript から制御できる様々なネイティブ拡張機能が用意されています。</p>

<ul>
<li>アプリ内広告</li>
<li>アプリ内課金</li>
<li>Google プレイゲーム連携</li>
<li>iOS ゲームセンター連携</li>
<li>Facebook 連携</li>
<li>プッシュ通知</li>
<li>デバイスアクセス（カメラ、モーションセンサー &hellip;）</li>
<li>ゲームパッド対応</li>
<li>マルチチャンネルのサウンド再生</li>
<li>などなど（参照：<a href="http://support.ludei.com/hc/en-us/articles/201821276-Plugins-overview-3-0-0-">Plugins overview - Ludei Support</a>）</li>
</ul>


<h3>分析サービス</h3>

<p><span class="block-center"><a href="https://www.ludei.com/cocoonjs/#business"><img src="http://front-core.org/images/post/about-cocoonjs/analytics.png" alt="Analytics" /></a></span></p>

<p>CocoonJS は独自の分析サービスを提供しており、
CocoonJS Cloud サービスのダッシュボードからアクセスできます。</p>

<h3>ライブ・アップデート</h3>

<p><span class="block-center"><a href="https://www.ludei.com/cocoonjs/#business"><img src="http://front-core.org/images/post/about-cocoonjs/updates.png" alt="CocoonJS Cloud" /></a></span></p>

<p>CocoonJS で開発したアプリのコンテンツは、アプリを再配布しなくても
CocoonJS Cloud サービスの管理画面から簡単にアップデートができます。</p>

<h1>まとめ</h1>

<p>CocoonJS は日本国内ではまだあまり知られておらず、日本語ドキュメントや関連ブログ記事も少ないです。（ほぼ無い）</p>

<p>今回は CocoonJS の概要だけずらっと並べただけですが、使い方など詳しい内容はそれぞれ別の記事でまとめて行きます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[爆速の HTML5 クロス・プラットフォーム CocoonJS]]></title>
    <link href="http://front-core.org/ja/blog/2014/12/16/about-cocoonjs/"/>
    <updated>2014-12-16T00:00:00+09:00</updated>
    <id>http://front-core.org/ja/blog/2014/12/16/about-cocoonjs</id>
    <content type="html"><![CDATA[<p>CocoonJS は <a href="https://www.ludei.com/">Ludei</a> 社が提供する爆速の「HTML5 クロス・プラットフォーム」です。</p>

<p>HTML5 クロス・プラットフォームは他にも色々ありますが、CocoonJS は PhoneGap に似ています。
HTML / CSS / JS をネイティブコードに変換するのでは無く、そのまま実行環境で動かす仕組みです。</p>

<!-- more -->


<h1>CocoonJS vs PhoneGap</h1>

<p>HTML / CSS / JS をそのまま使える点では同じですが、
PhoneGap がシステムの WebView を使うのに対し、CocoonJS は独自の実行環境を持っています。</p>

<p>システム WebView はとにかくパフォーマンスが悪く、OS や機種依存により挙動が違うなどの問題がありますが、
CocoonJS は独自の実行環境で動作するため OS や機種依存の問題を解消し、
システム WebView に比べて圧倒的に早いです。</p>

<p><span class="block-center">
<a href="https://www.ludei.com/landing/cocoonjs-phonegap/"><img src="http://front-core.org/images/post/about-cocoonjs/cocoonjs-vs-phonegap.png" alt="CocoonJS vs PhoneGap" /></a>
<span style="float:right">（Comparing CocoonJS and PhoneGap  - <a href="https://www.ludei.com/">Ludei</a> サイトより）</span>
</span></p>

<h1>CocoonJS が素敵な理由</h1>

<p>CocoonJS が素敵な理由をいくつか挙げてみます。</p>

<!--（参照：[About CocoonJS](https://www.ludei.com/cocoonjs/)）-->


<ul>
<li>爆速の HTML5 実行環境</li>
<li>今までの WEB 開発フレームワークやライブラリーをそのまま使える</li>
<li>簡単に実機でテストやデバッグができる</li>
<li>様々のプラットフォームに簡単に配布できる</li>
<li>アプリ運用に関わる便利なツールや拡張機能が備わっている</li>
</ul>


<h2>爆速の HTML5 実行環境</h2>

<p>CocoonJS では現在異なる３つの実行環境を提供しており、用途に合わせて最適な実行環境を選ぶ事ができます。</p>

<ul>
<li><a href="http://support.ludei.com/hc/en-us/articles/202321098">Canvas+</a></li>
<li><a href="http://support.ludei.com/hc/en-us/articles/201952993">WebView+</a></li>
<li><a href="http://support.ludei.com/hc/en-us/articles/202321108-Apache-Cordova-Promo">Apache Cordova</a></li>
</ul>


<h3>Canvas+</h3>

<p><span class="block-center">
<a href="http://support.ludei.com/hc/en-us/articles/202321098"><img src="http://front-core.org/images/post/about-cocoonjs/canvas-plus-promo.png" alt="Canvas+" /></a>
</span></p>

<p>HTML5 Canvas アプリやゲームに最適な実行環境です。
Canvas 描画に特化された Canvas+ の JavaScript 実行速度は、他のブラウザーやシステム WebView に比べて 10倍は早いと言われています。</p>

<p>iOS 5, Android 2.3 以上であれば WebGL もサポートされるので更に爆速です！</p>

<h3>WebView+</h3>

<p><span class="block-center">
<a href="http://support.ludei.com/hc/en-us/articles/201952993"><img src="http://front-core.org/images/post/about-cocoonjs/webview-plus-promo.png" alt="WebView+" /></a>
</span></p>

<p>Chromium で作られた独自の WebView として、主に Android 向けに開発された実行環境です。
Chromium を元にしているのでシステム WebView より端然早く、機種や OS バージョン毎の差異を気にしなくて済みます。
(Android 4 以上)</p>

<p>iOS 8 以前の iOS では WebView+ はサポートされてませんでしたが、
iOS 8 からは WKWebView を基盤にした WebView+ がサポートされる様になりました。</p>

<h3>Apache Cordova</h3>

<p><span class="block-center">
<a href="http://support.ludei.com/hc/en-us/articles/202321108-Apache-Cordova-Promo"><img src="http://front-core.org/images/post/about-cocoonjs/apache-cordova-promo.png" alt="Apache Cordova" /></a>
</span></p>

<p>上記の「CocoonJS vs PhoneGap」比較テーブルの一番下に「Cordova extensions」と書いている様に、
CocoonJS は Apache Cordova を正式にサポートしていて、Cordova の無数のプラグインと CocoonJS を組み合わせる事が可能です。</p>

<p>現在 Cordova に対応した CocoonJS 実行環境は WebView+ のみで、Canvas+ は対応予定になっています。</p>

<!--
最近のアナウンスで CocoonJS でも Cordoba プラグインを使える様になっています。
最近 CocoonJS は Apache Cordova を正式にサポートする事を発表しました。
これにより Cordova の無数のプラグインと CocoonJS の WebView+ を組み合わせる事が可能です。
（参照：[Apache Cordova Promo](http://support.ludei.com/hc/en-us/articles/202321108-Apache-Cordova-Promo)）
-->


<h2>今までの WEB 開発フレームワークやライブラリーをそのまま使える</h2>

<p>CocoonJS では HTML/CSS/JS がそのまま実行されるので、既存の WEB 開発フレームワークやライブラリーをそのまま使えます。</p>

<p>以下は例として一部の有名なフレームワークやライブラリーを挙げていますが、
あくまでも例なのでここに乗っていないライブラリーもほとんどそのまま使えます。（three.js など）</p>

<p><a href="https://www.ludei.com/cocoonjs/#development"><img src="http://front-core.org/images/post/about-cocoonjs/software.png" alt="使えるライブラリーの例" /></a>
<span style="float:right">（使えるライブラリーの例  - <a href="https://www.ludei.com/">Ludei</a> サイトより）</span></p>

<h2>簡単に実機でテストやデバッグができる</h2>

<p>CocoonJS 用に開発してアプリやゲームを、実際に実機でのテスト・デバッグが簡単に行える専用のアプリ「CocoonJS Launcher」が提供されています。</p>

<p><span class="block-center">
<a href="http://support.ludei.com/hc/en-us/articles/201048463-CocoonJS-launcher-user-guide"><img src="http://front-core.org/images/post/about-cocoonjs/cocoonjs-launcher.png" alt="CocoonJS Launcher" /></a>
</span></p>

<ul>
<li><a href="https://play.google.com/store/apps/details?id=com.ideateca.cocoonjslauncher&amp;hl=en">CocoonJS Launcher - Android 版</a></li>
<li><a href="https://itunes.apple.com/en/app/cocoonjs-by-ludei/id519623307?mt=8">CocoonJS Launcher - iOS 版</a></li>
</ul>


<p>CocoonJS Launcher を使えば自分が作成したコードを面倒な手順無しで簡単に実機確認ができます。</p>

<p>ソースコードをZIPファイルに圧縮して端末のファイルシステムに転送して実行、
またはローカルホストや外部サイトのURLを指定して実行する事も可能です。</p>

<!--
CocoonJS Launcher はデバッグ用のコンソール出力やプロファイリング機能も持っています。
Android の場合は Chrome DevTool(WebView+), Eclipse(Canvas+) によるリモートデバッグも可能です。
-->


<h2>様々のプラットフォームに簡単に配布できる</h2>

<p>CocoonJS Cloud と言うサービスも提供しており、
iOS, Android をはじめ様々なプラットフォーム向けに配布可能なアプリを Cloud サービスから簡単にコンパイルできます。</p>

<p><span class="block-center">
<a href="https://www.ludei.com/cocoonjs/#cross-platform"><img src="http://front-core.org/images/post/about-cocoonjs/cocoonjs-cloud.png" alt="CocoonJS Cloud" /></a>
</span></p>

<p>配布した後は分析やマネタイズに必要な各種設定をダッシュボードで管理できる便利なサービスです。</p>

<h2>アプリ運用に関わる便利なツールや拡張機能が備わっている</h2>

<h3>拡張機能</h3>

<p>CocoonJS には JavaScript から制御できる様々なネイティブ拡張機能が用意されています。</p>

<ul>
<li>アプリ内広告</li>
<li>アプリ内課金</li>
<li>Google プレイゲーム連携</li>
<li>iOS ゲームセンター連携</li>
<li>Facebook 連携</li>
<li>プッシュ通知</li>
<li>デバイスアクセス（カメラ、モーションセンサー &hellip;）</li>
<li>ゲームパッド対応</li>
<li>マルチチャンネルのサウンド再生</li>
<li>などなど（参照：<a href="http://support.ludei.com/hc/en-us/articles/201821276-Plugins-overview-3-0-0-">Plugins overview - Ludei Support</a>）</li>
</ul>


<h3>分析サービス</h3>

<p><span class="block-center"><a href="https://www.ludei.com/cocoonjs/#business"><img src="http://front-core.org/images/post/about-cocoonjs/analytics.png" alt="Analytics" /></a></span></p>

<p>CocoonJS は独自の分析サービスを提供しており、
CocoonJS Cloud サービスのダッシュボードからアクセスできます。</p>

<h3>ライブ・アップデート</h3>

<p><span class="block-center"><a href="https://www.ludei.com/cocoonjs/#business"><img src="http://front-core.org/images/post/about-cocoonjs/updates.png" alt="CocoonJS Cloud" /></a></span></p>

<p>CocoonJS で開発したアプリのコンテンツは、アプリを再配布しなくても
CocoonJS Cloud サービスの管理画面から簡単にアップデートができます。</p>

<h1>まとめ</h1>

<p>CocoonJS は日本国内ではまだあまり知られておらず、日本語ドキュメントや関連ブログ記事も少ないです。（ほぼ無い）</p>

<p>今回は CocoonJS の概要だけずらっと並べただけですが、使い方など詳しい内容はそれぞれ別の記事でまとめて行きます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CocoonJS Launcher の使い方]]></title>
    <link href="http://front-core.org/en/blog/2014/01/05/cocoonjs-launcher/"/>
    <updated>2014-01-05T00:00:00+09:00</updated>
    <id>http://front-core.org/en/blog/2014/01/05/cocoonjs-launcher</id>
    <content type="html"><![CDATA[<p>CocoonJS Launcher は CocoonJS 用に開発してアプリやゲームを、簡単に実機でテスト・デバッグできるアプリです。
現在 iOS 版と Android 版があります。</p>

<p><span class="block-center">
&nbsp;
<a href="https://itunes.apple.com/en/app/cocoonjs-by-ludei/id519623307?mt=8"><img src="http://front-core.org/images/post/cocoonjs-launcher/app-store.png" height="60" width="172" alt="CocoonJS Launcher - iOS 版" /></a>
&nbsp;
<a href="https://play.google.com/store/apps/details?id=com.ideateca.cocoonjslauncher&amp;hl=en"><img src="http://front-core.org/images/post/cocoonjs-launcher/google-play.png" height="60" width="172" alt="CocoonJS Launcher - Android 版" /></a>
&nbsp;
</span></p>

<!-- more -->


<h1>メインメニュー</h1>

<p>CocoonJS Launcher アプリを立ち上げると、スプラッシュスクリーンの後にメインメニュー画面が表示されます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/main-menu.png" width="320" alt="メインメニュー" />
</span></p>

<h1>DEMOS</h1>

<p>メインメニューで DEMOS を選択すると、 CocoonJS の素敵なところを体験できるデモ一覧が表示されます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demos.png" width="320" alt="DEMOS" />
</span></p>

<h2>使い方</h2>

<p>一覧からデモを選択すると、デモの説明と実行環境の選択ボタンが表示されます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-selected-screen.png" width="320" alt="デモ選択画面" />
</span></p>

<p>選択できる実行環境は CANVAS+ / WEBVIEW+ / WEBVIEW の３種類があります。
CANVAS+ / WEBVIEW+ は CocoonJS の実行環境、WEBVIEW はシステム WebView です。（参照：<a href="http://front-core.org/ja/blog/2014/12/16/about-cocoonjs/">爆速の HTML5 クロス・プラットフォーム CocoonJS</a>）</p>

<p>iOS 8 未満の iOS では WEBVIEW+ は表示されません。
またデモに対応しない実行環境はグレーアウトされ選択できません。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/runtime-gray-out.png" width="320" alt="デモ選択画面（非対応実行環境のグレーアウト）" />
</span></p>

<p>実行環境を１つ選択すると、ソースコードがダウンロードされた後、デモ実行画面に切り替わります。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-running-screen.png" width="569" alt="デモ実行画面" />
</span></p>

<p>CANVAS+ を選択した場合は画面の端っこに表示される「FPS(frames per second)」から動作パフォーマンスを確認できます。</p>

<p>描画パフォーマンスは CANVAS+ が断然早いです！
違う実行環境を選択してパフォーマンスを比較してみてください。</p>

<p>実行中のデモを終了したい場合は「FPS」表示をタップしてデバッグコンソールにアクセスし、「Actions」をタップして表示されるメニューから「Exit」を選択すると終了します。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/debug-console-actions.png" width="569" alt="Actions メニュー" />
</span></p>

<h2>デモ一覧</h2>

<p>ここでは iOS 版 v2.1.1.1 に載っているデモをいくつか紹介します。</p>

<h3>Ads</h3>

<p>CocoonJS 拡張機能の「アプリ内広告」を使ったデモです。バナー広告とフルスクリーン広告の表示を確認できます。</p>

<p><span class="block-center">↓バナー広告↓</span>
<span class="block-center"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-ads-1.png" width="569" alt="Ads デモ - バーナー広告" /></span></p>

<p><span class="block-center">↓フルスクリーン広告↓</span>
<span class="block-center"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-ads-2.png" width="569" alt="Ads デモ - フルスクリーン広告" /></span></p>

<h3>Box2D</h3>

<p>CocoonJS には Box2D がネイティヴで実装されており、JS から box2dweb API を通じて制御する事ができます。
このデモではネイティヴパフォーマンスで動く 2D 物理演算処理のシミュレーションを確認できます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-box2d.png" width="569" alt="Box2D デモ" />
</span></p>

<ul>
<li>＋ ボタン： 小惑星（らしい）が20個ずつ落ちて来きます。</li>
<li>ー ボタン： 逆に20個ずつ消えます。</li>
</ul>


<!--
### Facebook 

Facebook login and friend images

![Facebook デモ](/images/post/cocoonjs-launcher/demo-facebook.png)

### Google Play Games 

Google Play Games demo
-->


<h3>Keyboard</h3>

<p>CocoonJS 実行環境の CANVAS+ / WEBVIEW+ から OS のネイティヴキーボードを呼び出す事ができます。</p>

<p><span class="block-center"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-keyboard.png" width="569" alt="Keyboard デモ" /></span></p>

<p><span class="block-center">↓URL入力の例↓</span>
<span class="block-center"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-keyboard-url.png" width="569" alt="Keyboard デモ - URL入力" /></span></p>

<h3>Location</h3>

<p>CocoonJS では端末の位置情報システムにアクセスする事ができます。このデモでは現在の経緯度や高度などの位置情報を確認できます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-location.png" width="569" alt="Location デモ" />
</span></p>

<h3>Multichannel Sound</h3>

<p>CocoonJS はモバイルブラウザの HTML5 オーディオ要素に関する制約をすべて解消してくれます。
このデモではマルチチャンネルのオーディオ再生を確認できます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-multichannel-sound.png" width="569" alt="Multichannel Sound デモ" />
</span></p>

<h3>Multiplayer</h3>

<p>CocoonJS の「マルチプレイヤー」サポート機能のデモです。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-multiplayer.png" width="569" alt="Multiplayer デモ" />
</span></p>

<ul>
<li><p><strong>Multiplayer Match:</strong> CocoonJS 拡張機能の「iOS ゲームセンター連携」を使ったマルチプレイヤーマッチのデモ（現在 iOS ゲームセンターのみ対応）</p></li>
<li><p><strong>Local Match:</strong> １つの端末でターン制によるマルチプレイができる様にする「Loopback モード」のデモ</p></li>
</ul>


<p><span class="block-center">↓Multiplayer Match↓</span>
<span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-multiplayer-match.png" width="569" alt="Multiplayer デモ" />
</span></p>

<p><span class="block-center">↓Local Match↓</span>
<span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-multiplayer-local-match.png" width="569" alt="Multiplayer デモ" />
</span></p>

<!--
### Notifications 

Push and Local notifications
-->


<h3>Rate</h3>

<p>CocoonJS の「レーティング」サポート機能のデモです。
これにより CocoonJS で開発したアプリから App Store や Google Play のレビューページに簡単に遷移する事ができます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-rate.png" width="569" alt="Rate デモ" />
</span></p>

<p><span class="block-center">↓ストアのレビューページ↓</span>
<span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-rate-store-screen.png" width="569" alt="Rate デモ" />
</span></p>

<h3>Sumon</h3>

<p>実際にストアで配信中の CocoonJS で作られた「Sumon」と言うゲームのサンプルです。</p>

<ul>
<li><a href="https://itunes.apple.com/app/id470147794">Sumon - iOS 版</a></li>
<li><a href="https://play.google.com/store/apps/details?id=com.ideateca.sumon&amp;hl=en">Sumon - Android 版</a></li>
</ul>


<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-sumon.png" width="569" alt="Sumon デモ" />
</span></p>

<!--
### Vibration 

Test for the device vibration capability
-->


<h3>WebGL</h3>

<p>CocoonJS の売りは何よりも WebGL 対応による爆速の描画パフォーマンスです。
それを裏付けるように、WebGL のデモが沢山載っています。</p>

<!--
* 3D horse - A poligonal 3D horse running in place
* Ludei Logo - Ludei logo with falling drops of water
* NeHe cube - Textured 3D Cube rotating in mid-air
* PlayCanvas Doom3 Gangnam - Demo created using PlayCanvas. Three monsters from Doom3 dancing to the sound of Gangnam Style まさかのカンナム・スタイル！
* Striped Tunnel - An endless dizzying striped tunnel
* Three.js Cubemap - Three heads illuminated with a cubemap
* Watery texture - A texture distorted to look like rippling water
-->


<p><span class="block-center">↓走る 3D 馬↓</span>
<span class="block-center"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-webgl-3d-horse.png" width="569" alt="WebGL - 3D horse デモ" /></span></p>

<p><span class="block-center">↓Ludei社の 3D ロゴ↓</span>
<span class="block-center"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-webgl-ludei-logo.png" width="569" alt="WebGL - Ludei Logo デモ" /></span></p>

<p><span class="block-center">↓ぬるぬる回転する 3D キューブ↓</span>
<span class="block-center"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-webgl-nehe-cube.png" width="569" alt="WebGL - NeHe cube デモ" /></span></p>

<p><span class="block-center">↓まさかのカンナムスタイル↓</span>
<span class="block-center">（Doom3 のモンスター達がカンナムスタイルを踊る）</span>
<span class="block-center"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-webgl-playcanvas-doom3-gangnam.png" width="569" alt="WebGL - PlayCanvas Doom3 Gangnam デモ" /></span></p>

<p><span class="block-center">↓シェーダベースのねじれトンネル↓</span>
<span class="block-center"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-webgl-striped-tunnel.png" width="569" alt="WebGL - Striped Tunnel デモ" /></span></p>

<p><span class="block-center">↓シェーダベースの水波↓</span>
<span class="block-center"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-webgl-watery-texture.png" width="569" alt="WebGL - Watery texture デモ" /></span></p>

<!--
### WebView 

WebView support in Canvas+
-->


<h2>その他のデモ</h2>

<p>CocoonJS Launcher には載っていないデモもあります。
すべてのデモ一覧は<a href="http://cocoonjsservice.ludei.com/cocoonjslaunchersvr/demo-list/">こちら</a>のページで確認できます。</p>

<p><span class="block-center" style="border: 1px solid #9b9b9b">
<a href="https://cocoonjsservice.ludei.com/cocoonjslaunchersvr/demo-list/"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-list.png" alt="デモ一覧" /></a>
</span>
<span class="block-center">（TRY OUT THE DEMOS - <a href="https://www.ludei.com/">Ludei</a> サイトより）</span></p>

<p>デモ一覧ではソースコードをダウンロードできるので、「DEMOS」に乗っていなくても後述の「YOUR APP」で動かす事ができます。</p>

<h1>YOUR APP</h1>

<p>YOUR APP では自作コードや外部デモコードを直接 CocoonJS Launcher で動かす事ができます。
やり方は ZIP ファイルを転送して実行する方法と URL を指定して実行する方法の２通りあります。</p>

<h2>ログイン</h2>

<p>YOUR APP を使うためには、まず CocoonJS Cloud サービスへの登録が必要です。</p>

<p><a href="https://sso.ludei.com/signup">https://sso.ludei.com/signup</a></p>

<p>登録が完了したら、登録したメールアドレスとパスワードでログインできます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/your-app-login.png" width="320" alt="ログイン画面" />
</span></p>

<h2>ZIP ファイル転送して実行</h2>

<p>ZIP ファイルで転送して置くと、オフラインでも CocoonJS Launcher で自分のコードを実行する事ができます。
注意点として index.html は ZIP フォルダーのルートパスにおく必要があります。</p>

<h3>iOS の場合</h3>

<ol>
<li>iOS デバイスを PC に繋ぎ、iTunes を立ち上げます。</li>
<li><p>デバイスを選択して、APP のファイル共有画面を開きます。
<span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/itune-file-share-1.png" alt="iTune ファイル共有" />
</span></p></li>
<li><p>CocoonJS を選択して、転送するファイルをドラッグまたは「追加&hellip;」ボタンで追加します。
<span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/itune-file-share-2.png" alt="iTune ファイル共有" />
</span></p></li>
<li><p>YOUR APP の DOCUMENTS に追加された ZIP ファイルが表示されます。</p></li>
<li>実行したい ZIP ファイルを選択して、実行環境を選択すると実行画面に切り替わります。
<span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/your-app-documents.png" width="320" alt="ログイン画面" />
</span></li>
</ol>


<h3>Android の場合</h3>

<p>Android の場合は SD カードに ZIP ファイルを転送します。</p>

<p>SD カードへのファイル転送には色んな方法がありますが、ここでは Android SDK を使う場合のファイル転送コマンドを記載します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>adb push &lt;ZIPファイルのパス&gt; /sdcard/</span></code></pre></td></tr></table></div></figure>


<p>ファイル転送が完了したら、同じく YOUR APP の DOCUMENTS に追加された ZIP ファイルが表示されます。</p>

<h2>URL を指定して実行</h2>

<p>HTML ページの URL を指定するとウェブサーバー上のコードを直接実行できます。（index.html は省略可）</p>

<p>また、<a href="https://cocoonjsservice.ludei.com/cocoonjslaunchersvr/demo-list/">デモ一覧</a>の
ダウンロードリンクのように ZIP ファイルの URL を指定すると、その ZIP ファイルがダウンロードされ実行されます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/your-app-url.png" width="320" alt="ログイン画面" />
</span></p>

<h1>デバッグツール</h1>

<p>デモ・アプリ実行画面の「FPS」表示をタップするとデバッグコンソールにアクセスできます。</p>

<h2>ログ出力</h2>

<p>デバッグコンソールには CocoonJS 既定のログと JavaScript の <code>console</code> 出力が表示されます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/debug-console.png" width="320" alt="デバッグコンソール" />
</span></p>

<p>下端の All / Console / Warnings / Errors タブでログの種類毎にフィルタリングして表示する事ができます。</p>

<ul>
<li>All: すべてのログ</li>
<li>Console: デバッグ・情報ログ（console.debug, console.log, console.info）</li>
<li>Warnings: 警告ログ（console.warn）</li>
<li>Errors: エラーログ（console.error）</li>
</ul>


<h2>Actions メニュー</h2>

<p>「Actions」をタップすると以下のメニューが表示されます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/debug-console-actions-menu.png" width="320" alt="Actions メニュー" />
</span></p>

<ul>
<li>Exit:  実行中のデモ・アプリを終了します。</li>
<li>Reload: 実行中のデモ・アプリを再読み込みします。</li>
<li>Profile: 実行パフォーマンスを計測して、プロファイルデータを出力します。</li>
<li>MemoryLog: デバッグコンソールに現在のメモリログを出力します。</li>
</ul>


<p><span class="block-center">↓Profile 開始↓</span>
<span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/debug-console-profile-start.png" width="320" alt="Actions メニュー" />
</span></p>

<p><span class="block-center">↓MemoryLog 出力↓</span>
<span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/debug-console-memory-log.png" width="320" alt="Actions メニュー" />
</span></p>

<h1>設定</h1>

<p>CocoonJS Launcher の設定画面では、デモ・アプリを実行する際のカスタマイズ可能ないくつかのオプションが用意されています。</p>

<h2>設定ボタンの場所</h2>

<p>設定画面は「DEMOS」ではデモ選択画面の右上「・・・」から、「YOUR APP」では下端の「SETTINGS」ボタンからアクセスできます。</p>

<p><span class="block-center">↓DEMOS↓</span>
<span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demos-settings-button.png" width="320" alt="DEMOS の設定ボタン" />
</span></p>

<p><span class="block-center">↓YOUR APP↓</span>
<span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/your-app-settings-button.png" width="320" alt="YOUR APP の設定ボタン" />
</span></p>

<h2>設定画面</h2>

<p>主に以下のオプションが変更可能です。</p>

<ul>
<li>Orientation mode: デモ・アプリの実行中の端末向きを設定できます。</li>
<li>Debug enabled: デバッグ機能をアクティブ/非アクティブできます。</li>
<li>Debug position: デバッグボタン（FPS 表示）の位置を変更できます。</li>
</ul>


<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/settings.png" width="320" alt="設定画面" />
</span></p>

<p>設定可能なオプションは OS によって異なる場合があります。</p>

<h1>まとめ</h1>

<p>CocoonJS はこの CocoonJS Launcher により実機テストやデバッグが簡単にできるので、他のネイティブアプリ開発ツールに比べて開発速度が早いです。</p>

<p>ぜひ CocoonJS Launcher をダウンロードして、CocoonJS のすばらしいデモを体験してみてください。</p>

<p>次回からは実際に CocoonJS で動くコードの実装方法をまとめて行きます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CocoonJS Launcher の使い方]]></title>
    <link href="http://front-core.org/ja/blog/2014/01/05/cocoonjs-launcher/"/>
    <updated>2014-01-05T00:00:00+09:00</updated>
    <id>http://front-core.org/ja/blog/2014/01/05/cocoonjs-launcher</id>
    <content type="html"><![CDATA[<p>CocoonJS Launcher は CocoonJS 用に開発してアプリやゲームを、簡単に実機でテスト・デバッグできるアプリです。
現在 iOS 版と Android 版があります。</p>

<p><span class="block-center">
&nbsp;
<a href="https://itunes.apple.com/en/app/cocoonjs-by-ludei/id519623307?mt=8"><img src="http://front-core.org/images/post/cocoonjs-launcher/app-store.png" height="60" width="172" alt="CocoonJS Launcher - iOS 版" /></a>
&nbsp;
<a href="https://play.google.com/store/apps/details?id=com.ideateca.cocoonjslauncher&amp;hl=en"><img src="http://front-core.org/images/post/cocoonjs-launcher/google-play.png" height="60" width="172" alt="CocoonJS Launcher - Android 版" /></a>
&nbsp;
</span></p>

<!-- more -->


<h1>メインメニュー</h1>

<p>CocoonJS Launcher アプリを立ち上げると、スプラッシュスクリーンの後にメインメニュー画面が表示されます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/main-menu.png" width="320" alt="メインメニュー" />
</span></p>

<h1>DEMOS</h1>

<p>メインメニューで DEMOS を選択すると、 CocoonJS の素敵なところを体験できるデモ一覧が表示されます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demos.png" width="320" alt="DEMOS" />
</span></p>

<h2>使い方</h2>

<p>一覧からデモを選択すると、デモの説明と実行環境の選択ボタンが表示されます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-selected-screen.png" width="320" alt="デモ選択画面" />
</span></p>

<p>選択できる実行環境は CANVAS+ / WEBVIEW+ / WEBVIEW の３種類があります。
CANVAS+ / WEBVIEW+ は CocoonJS の実行環境、WEBVIEW はシステム WebView です。（参照：<a href="http://front-core.org/ja/blog/2014/12/16/about-cocoonjs/">爆速の HTML5 クロス・プラットフォーム CocoonJS</a>）</p>

<p>iOS 8 未満の iOS では WEBVIEW+ は表示されません。
またデモに対応しない実行環境はグレーアウトされ選択できません。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/runtime-gray-out.png" width="320" alt="デモ選択画面（非対応実行環境のグレーアウト）" />
</span></p>

<p>実行環境を１つ選択すると、ソースコードがダウンロードされた後、デモ実行画面に切り替わります。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-running-screen.png" width="569" alt="デモ実行画面" />
</span></p>

<p>CANVAS+ を選択した場合は画面の端っこに表示される「FPS(frames per second)」から動作パフォーマンスを確認できます。</p>

<p>描画パフォーマンスは CANVAS+ が断然早いです！
違う実行環境を選択してパフォーマンスを比較してみてください。</p>

<p>実行中のデモを終了したい場合は「FPS」表示をタップしてデバッグコンソールにアクセスし、「Actions」をタップして表示されるメニューから「Exit」を選択すると終了します。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/debug-console-actions.png" width="569" alt="Actions メニュー" />
</span></p>

<h2>デモ一覧</h2>

<p>ここでは iOS 版 v2.1.1.1 に載っているデモをいくつか紹介します。</p>

<h3>Ads</h3>

<p>CocoonJS 拡張機能の「アプリ内広告」を使ったデモです。バナー広告とフルスクリーン広告の表示を確認できます。</p>

<p><span class="block-center">↓バナー広告↓</span>
<span class="block-center"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-ads-1.png" width="569" alt="Ads デモ - バーナー広告" /></span></p>

<p><span class="block-center">↓フルスクリーン広告↓</span>
<span class="block-center"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-ads-2.png" width="569" alt="Ads デモ - フルスクリーン広告" /></span></p>

<h3>Box2D</h3>

<p>CocoonJS には Box2D がネイティヴで実装されており、JS から box2dweb API を通じて制御する事ができます。
このデモではネイティヴパフォーマンスで動く 2D 物理演算処理のシミュレーションを確認できます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-box2d.png" width="569" alt="Box2D デモ" />
</span></p>

<ul>
<li>＋ ボタン： 小惑星（らしい）が20個ずつ落ちて来きます。</li>
<li>ー ボタン： 逆に20個ずつ消えます。</li>
</ul>


<!--
### Facebook 

Facebook login and friend images

![Facebook デモ](/images/post/cocoonjs-launcher/demo-facebook.png)

### Google Play Games 

Google Play Games demo
-->


<h3>Keyboard</h3>

<p>CocoonJS 実行環境の CANVAS+ / WEBVIEW+ から OS のネイティヴキーボードを呼び出す事ができます。</p>

<p><span class="block-center"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-keyboard.png" width="569" alt="Keyboard デモ" /></span></p>

<p><span class="block-center">↓URL入力の例↓</span>
<span class="block-center"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-keyboard-url.png" width="569" alt="Keyboard デモ - URL入力" /></span></p>

<h3>Location</h3>

<p>CocoonJS では端末の位置情報システムにアクセスする事ができます。このデモでは現在の経緯度や高度などの位置情報を確認できます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-location.png" width="569" alt="Location デモ" />
</span></p>

<h3>Multichannel Sound</h3>

<p>CocoonJS はモバイルブラウザの HTML5 オーディオ要素に関する制約をすべて解消してくれます。
このデモではマルチチャンネルのオーディオ再生を確認できます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-multichannel-sound.png" width="569" alt="Multichannel Sound デモ" />
</span></p>

<h3>Multiplayer</h3>

<p>CocoonJS の「マルチプレイヤー」サポート機能のデモです。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-multiplayer.png" width="569" alt="Multiplayer デモ" />
</span></p>

<ul>
<li><p><strong>Multiplayer Match:</strong> CocoonJS 拡張機能の「iOS ゲームセンター連携」を使ったマルチプレイヤーマッチのデモ（現在 iOS ゲームセンターのみ対応）</p></li>
<li><p><strong>Local Match:</strong> １つの端末でターン制によるマルチプレイができる様にする「Loopback モード」のデモ</p></li>
</ul>


<p><span class="block-center">↓Multiplayer Match↓</span>
<span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-multiplayer-match.png" width="569" alt="Multiplayer デモ" />
</span></p>

<p><span class="block-center">↓Local Match↓</span>
<span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-multiplayer-local-match.png" width="569" alt="Multiplayer デモ" />
</span></p>

<!--
### Notifications 

Push and Local notifications
-->


<h3>Rate</h3>

<p>CocoonJS の「レーティング」サポート機能のデモです。
これにより CocoonJS で開発したアプリから App Store や Google Play のレビューページに簡単に遷移する事ができます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-rate.png" width="569" alt="Rate デモ" />
</span></p>

<p><span class="block-center">↓ストアのレビューページ↓</span>
<span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-rate-store-screen.png" width="569" alt="Rate デモ" />
</span></p>

<h3>Sumon</h3>

<p>実際にストアで配信中の CocoonJS で作られた「Sumon」と言うゲームのサンプルです。</p>

<ul>
<li><a href="https://itunes.apple.com/app/id470147794">Sumon - iOS 版</a></li>
<li><a href="https://play.google.com/store/apps/details?id=com.ideateca.sumon&amp;hl=en">Sumon - Android 版</a></li>
</ul>


<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demo-sumon.png" width="569" alt="Sumon デモ" />
</span></p>

<!--
### Vibration 

Test for the device vibration capability
-->


<h3>WebGL</h3>

<p>CocoonJS の売りは何よりも WebGL 対応による爆速の描画パフォーマンスです。
それを裏付けるように、WebGL のデモが沢山載っています。</p>

<!--
* 3D horse - A poligonal 3D horse running in place
* Ludei Logo - Ludei logo with falling drops of water
* NeHe cube - Textured 3D Cube rotating in mid-air
* PlayCanvas Doom3 Gangnam - Demo created using PlayCanvas. Three monsters from Doom3 dancing to the sound of Gangnam Style まさかのカンナム・スタイル！
* Striped Tunnel - An endless dizzying striped tunnel
* Three.js Cubemap - Three heads illuminated with a cubemap
* Watery texture - A texture distorted to look like rippling water
-->


<p><span class="block-center">↓走る 3D 馬↓</span>
<span class="block-center"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-webgl-3d-horse.png" width="569" alt="WebGL - 3D horse デモ" /></span></p>

<p><span class="block-center">↓Ludei社の 3D ロゴ↓</span>
<span class="block-center"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-webgl-ludei-logo.png" width="569" alt="WebGL - Ludei Logo デモ" /></span></p>

<p><span class="block-center">↓ぬるぬる回転する 3D キューブ↓</span>
<span class="block-center"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-webgl-nehe-cube.png" width="569" alt="WebGL - NeHe cube デモ" /></span></p>

<p><span class="block-center">↓まさかのカンナムスタイル↓</span>
<span class="block-center">（Doom3 のモンスター達がカンナムスタイルを踊る）</span>
<span class="block-center"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-webgl-playcanvas-doom3-gangnam.png" width="569" alt="WebGL - PlayCanvas Doom3 Gangnam デモ" /></span></p>

<p><span class="block-center">↓シェーダベースのねじれトンネル↓</span>
<span class="block-center"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-webgl-striped-tunnel.png" width="569" alt="WebGL - Striped Tunnel デモ" /></span></p>

<p><span class="block-center">↓シェーダベースの水波↓</span>
<span class="block-center"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-webgl-watery-texture.png" width="569" alt="WebGL - Watery texture デモ" /></span></p>

<!--
### WebView 

WebView support in Canvas+
-->


<h2>その他のデモ</h2>

<p>CocoonJS Launcher には載っていないデモもあります。
すべてのデモ一覧は<a href="http://cocoonjsservice.ludei.com/cocoonjslaunchersvr/demo-list/">こちら</a>のページで確認できます。</p>

<p><span class="block-center" style="border: 1px solid #9b9b9b">
<a href="https://cocoonjsservice.ludei.com/cocoonjslaunchersvr/demo-list/"><img src="http://front-core.org/images/post/cocoonjs-launcher/demo-list.png" alt="デモ一覧" /></a>
</span>
<span class="block-center">（TRY OUT THE DEMOS - <a href="https://www.ludei.com/">Ludei</a> サイトより）</span></p>

<p>デモ一覧ではソースコードをダウンロードできるので、「DEMOS」に乗っていなくても後述の「YOUR APP」で動かす事ができます。</p>

<h1>YOUR APP</h1>

<p>YOUR APP では自作コードや外部デモコードを直接 CocoonJS Launcher で動かす事ができます。
やり方は ZIP ファイルを転送して実行する方法と URL を指定して実行する方法の２通りあります。</p>

<h2>ログイン</h2>

<p>YOUR APP を使うためには、まず CocoonJS Cloud サービスへの登録が必要です。</p>

<p><a href="https://sso.ludei.com/signup">https://sso.ludei.com/signup</a></p>

<p>登録が完了したら、登録したメールアドレスとパスワードでログインできます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/your-app-login.png" width="320" alt="ログイン画面" />
</span></p>

<h2>ZIP ファイル転送して実行</h2>

<p>ZIP ファイルで転送して置くと、オフラインでも CocoonJS Launcher で自分のコードを実行する事ができます。
注意点として index.html は ZIP フォルダーのルートパスにおく必要があります。</p>

<h3>iOS の場合</h3>

<ol>
<li>iOS デバイスを PC に繋ぎ、iTunes を立ち上げます。</li>
<li><p>デバイスを選択して、APP のファイル共有画面を開きます。
<span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/itune-file-share-1.png" alt="iTune ファイル共有" />
</span></p></li>
<li><p>CocoonJS を選択して、転送するファイルをドラッグまたは「追加&hellip;」ボタンで追加します。
<span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/itune-file-share-2.png" alt="iTune ファイル共有" />
</span></p></li>
<li><p>YOUR APP の DOCUMENTS に追加された ZIP ファイルが表示されます。</p></li>
<li>実行したい ZIP ファイルを選択して、実行環境を選択すると実行画面に切り替わります。
<span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/your-app-documents.png" width="320" alt="ログイン画面" />
</span></li>
</ol>


<h3>Android の場合</h3>

<p>Android の場合は SD カードに ZIP ファイルを転送します。</p>

<p>SD カードへのファイル転送には色んな方法がありますが、ここでは Android SDK を使う場合のファイル転送コマンドを記載します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>adb push &lt;ZIPファイルのパス&gt; /sdcard/</span></code></pre></td></tr></table></div></figure>


<p>ファイル転送が完了したら、同じく YOUR APP の DOCUMENTS に追加された ZIP ファイルが表示されます。</p>

<h2>URL を指定して実行</h2>

<p>HTML ページの URL を指定するとウェブサーバー上のコードを直接実行できます。（index.html は省略可）</p>

<p>また、<a href="https://cocoonjsservice.ludei.com/cocoonjslaunchersvr/demo-list/">デモ一覧</a>の
ダウンロードリンクのように ZIP ファイルの URL を指定すると、その ZIP ファイルがダウンロードされ実行されます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/your-app-url.png" width="320" alt="ログイン画面" />
</span></p>

<h1>デバッグツール</h1>

<p>デモ・アプリ実行画面の「FPS」表示をタップするとデバッグコンソールにアクセスできます。</p>

<h2>ログ出力</h2>

<p>デバッグコンソールには CocoonJS 既定のログと JavaScript の <code>console</code> 出力が表示されます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/debug-console.png" width="320" alt="デバッグコンソール" />
</span></p>

<p>下端の All / Console / Warnings / Errors タブでログの種類毎にフィルタリングして表示する事ができます。</p>

<ul>
<li>All: すべてのログ</li>
<li>Console: デバッグ・情報ログ（console.debug, console.log, console.info）</li>
<li>Warnings: 警告ログ（console.warn）</li>
<li>Errors: エラーログ（console.error）</li>
</ul>


<h2>Actions メニュー</h2>

<p>「Actions」をタップすると以下のメニューが表示されます。</p>

<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/debug-console-actions-menu.png" width="320" alt="Actions メニュー" />
</span></p>

<ul>
<li>Exit:  実行中のデモ・アプリを終了します。</li>
<li>Reload: 実行中のデモ・アプリを再読み込みします。</li>
<li>Profile: 実行パフォーマンスを計測して、プロファイルデータを出力します。</li>
<li>MemoryLog: デバッグコンソールに現在のメモリログを出力します。</li>
</ul>


<p><span class="block-center">↓Profile 開始↓</span>
<span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/debug-console-profile-start.png" width="320" alt="Actions メニュー" />
</span></p>

<p><span class="block-center">↓MemoryLog 出力↓</span>
<span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/debug-console-memory-log.png" width="320" alt="Actions メニュー" />
</span></p>

<h1>設定</h1>

<p>CocoonJS Launcher の設定画面では、デモ・アプリを実行する際のカスタマイズ可能ないくつかのオプションが用意されています。</p>

<h2>設定ボタンの場所</h2>

<p>設定画面は「DEMOS」ではデモ選択画面の右上「・・・」から、「YOUR APP」では下端の「SETTINGS」ボタンからアクセスできます。</p>

<p><span class="block-center">↓DEMOS↓</span>
<span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/demos-settings-button.png" width="320" alt="DEMOS の設定ボタン" />
</span></p>

<p><span class="block-center">↓YOUR APP↓</span>
<span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/your-app-settings-button.png" width="320" alt="YOUR APP の設定ボタン" />
</span></p>

<h2>設定画面</h2>

<p>主に以下のオプションが変更可能です。</p>

<ul>
<li>Orientation mode: デモ・アプリの実行中の端末向きを設定できます。</li>
<li>Debug enabled: デバッグ機能をアクティブ/非アクティブできます。</li>
<li>Debug position: デバッグボタン（FPS 表示）の位置を変更できます。</li>
</ul>


<p><span class="block-center">
<img src="http://front-core.org/images/post/cocoonjs-launcher/settings.png" width="320" alt="設定画面" />
</span></p>

<p>設定可能なオプションは OS によって異なる場合があります。</p>

<h1>まとめ</h1>

<p>CocoonJS はこの CocoonJS Launcher により実機テストやデバッグが簡単にできるので、他のネイティブアプリ開発ツールに比べて開発速度が早いです。</p>

<p>ぜひ CocoonJS Launcher をダウンロードして、CocoonJS のすばらしいデモを体験してみてください。</p>

<p>次回からは実際に CocoonJS で動くコードの実装方法をまとめて行きます。</p>
]]></content>
  </entry>
  
</feed>
